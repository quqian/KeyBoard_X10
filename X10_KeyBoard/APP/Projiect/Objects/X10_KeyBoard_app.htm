<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\X10_KeyBoard_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\X10_KeyBoard_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Mon Jan 07 16:08:00 2019
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ComRecvMainBoardData &rArr; MainBoardPktProc &rArr; MainBoardCardInfo &rArr; CardNumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[16]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">ADC_CMP_IRQHandler</a><BR>
 <LI><a href="#[73]">FIFO_S_Flush</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">FIFO_S_Flush</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC_CMP_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[26]">CEC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[13]">DMA_Channel0_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[14]">DMA_Channel1_2_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[15]">DMA_Channel3_4_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2c]">DMA_Channel5_6_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[d]">FMC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[27]">I2C0_ER_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[20]">I2C0_EV_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[28]">I2C1_ER_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[21]">I2C1_EV_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2a]">I2C2_ER_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[29]">I2C2_EV_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[e]">RCU_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[22]">SPI0_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2d]">SPI2_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from systick.o(i.SysTick_Handler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from system_gd32f3x0.o(i.SystemInit) referenced from startup_gd32f3x0.o(.text)
 <LI><a href="#[17]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from sim_uart.o(i.TIMER0_BRK_UP_TRG_COM_IRQHandler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[18]">TIMER0_CC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1c]">TIMER13_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1d]">TIMER14_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1e]">TIMER15_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1f]">TIMER16_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[19]">TIMER1_IRQHandler</a> from system.o(i.TIMER1_IRQHandler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1a]">TIMER2_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1b]">TIMER5_DAC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[12]">TSI_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[24]">USART0_IRQHandler</a> from usart.o(i.USART0_IRQHandler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[25]">USART1_IRQHandler</a> from usart.o(i.USART1_IRQHandler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2e]">USBFS_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2b]">USBFS_WKUP_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f3x0.o(.text)
 <LI><a href="#[33]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[32]">fputc</a> from usart.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[2f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[34]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[fe]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ff]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[100]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[101]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[102]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA_Channel5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER0_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USBFS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBFS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>mktime</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcTimeStamp
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNumUpLoad
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemInfo
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCardBlockSuccessUpLoad
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_ACK
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCBBumUpLoad
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNumUpLoad
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcTimeStamp
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardTypeUpLoad
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemState
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemInfo
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValuesUpLoad
</UL>

<P><STRONG><a name="[106]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[83]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSysInfo
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3e]"></a>localtime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, localtime_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = localtime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinuxTickToDay
</UL>

<P><STRONG><a name="[37]"></a>_localtime</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, localtime_i.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>

<P><STRONG><a name="[35]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[107]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[108]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[109]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>App_CB_SendData</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, protowithmainboard.o(i.App_CB_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSend
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPktSum
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCardBlockSuccessUpLoad
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_ACK
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCBBumUpLoad
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNumUpLoad
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardTypeUpLoad
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemState
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValuesUpLoad
</UL>

<P><STRONG><a name="[6d]"></a>BCD2HEX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc.o(i.BCD2HEX))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcTimeStamp
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[43]"></a>BSPFlashWrite</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, flash_usr.o(i.BSPFlashWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BSPFlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadByte
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
</UL>

<P><STRONG><a name="[49]"></a>BspInit</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, main.o(i.BspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BspInit &rArr; LoadSystemInfo &rArr; FlashWriteSysInfo &rArr; FlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResetRecord
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>CardNumUpLoad</STRONG> (Thumb, 52 bytes, Stack size 144 bytes, protowithmainboard.o(i.CardNumUpLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CardNumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
</UL>

<P><STRONG><a name="[59]"></a>CardTypeUpLoad</STRONG> (Thumb, 44 bytes, Stack size 144 bytes, protowithmainboard.o(i.CardTypeUpLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CardTypeUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[5a]"></a>Check_M1_Card</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, nfcard.o(i.Check_M1_Card))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Check_M1_Card &rArr; TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardTypeUpLoad
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeTicks
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCardTask
</UL>

<P><STRONG><a name="[5f]"></a>Clear_BitMask</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fm175xx.o(i.Clear_BitMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Clear_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[62]"></a>Clear_FIFO</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fm175xx.o(i.Clear_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[64]"></a>ComRecvMainBoardData</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, protowithmainboard.o(i.ComRecvMainBoardData))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ComRecvMainBoardData &rArr; MainBoardPktProc &rArr; MainBoardCardInfo &rArr; CardNumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardPktProc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeTicks
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>DebugPktProc</STRONG> (Thumb, 568 bytes, Stack size 64 bytes, comproto.o(i.DebugPktProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = DebugPktProc &rArr; FlashTest &rArr; BSPFlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_current_time_get
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcTimeStamp
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2HEX
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeTicks
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
</UL>

<P><STRONG><a name="[70]"></a>DebugRecvProc</STRONG> (Thumb, 460 bytes, Stack size 40 bytes, comproto.o(i.DebugRecvProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = DebugRecvProc &rArr; DebugPktProc &rArr; FlashTest &rArr; BSPFlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Get
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeTicks
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>Delay100Us</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(i.Delay100Us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Delay100Us &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
</UL>

<P><STRONG><a name="[4f]"></a>DelayMsWithNoneOs</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, systick.o(i.DelayMsWithNoneOs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSend
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>

<P><STRONG><a name="[72]"></a>DelayUs</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, systick.o(i.DelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay100Us
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirtualUartByteSend
</UL>

<P><STRONG><a name="[73]"></a>FIFO_S_Flush</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fifo.o(i.FIFO_S_Flush))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Flush
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Flush
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[66]"></a>FIFO_S_Get</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fifo.o(i.FIFO_S_Get))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
</UL>

<P><STRONG><a name="[d6]"></a>FIFO_S_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fifo.o(i.FIFO_S_Init))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[da]"></a>FIFO_S_Put</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, fifo.o(i.FIFO_S_Put))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[55]"></a>FM175XX_Config</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, fm175xx.o(i.FM175XX_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FM175XX_Config &rArr; FM175XX_Init &rArr; Set_Rf &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[75]"></a>FM175XX_HardReset</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, fm175xx.o(i.FM175XX_HardReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FM175XX_HardReset &rArr; Read_Reg &rArr; SPIRead &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[74]"></a>FM175XX_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, fm175xx.o(i.FM175XX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FM175XX_Init &rArr; Set_Rf &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Config
</UL>

<P><STRONG><a name="[48]"></a>FeedWatchDog</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system.o(i.FeedWatchDog))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_counter_reload
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCBBumUpLoad
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardPktProc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSend
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemInfo
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCardTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPFlashWrite
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[45]"></a>FlashReadByte</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash.o(i.FlashReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSysInfo
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadSysInfo
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPFlashWrite
</UL>

<P><STRONG><a name="[7c]"></a>FlashReadSysInfo</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash_usr.o(i.FlashReadSysInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashReadSysInfo &rArr; FlashReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
</UL>

<P><STRONG><a name="[6f]"></a>FlashTest</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, flash_usr.o(i.FlashTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FlashTest &rArr; BSPFlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPFlashWrite
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[81]"></a>FlashWrite</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, flash.o(i.FlashWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = FlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadByte
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSysInfo
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
</UL>

<P><STRONG><a name="[82]"></a>FlashWriteSysInfo</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, flash_usr.o(i.FlashWriteSysInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = FlashWriteSysInfo &rArr; FlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadByte
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
</UL>

<P><STRONG><a name="[44]"></a>FlashWriteWord</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, flash.o(i.FlashWriteWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPFlashWrite
</UL>

<P><STRONG><a name="[85]"></a>G0GetKey</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, tsikey.o(i.G0GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = G0GetKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group0_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[8a]"></a>G1GetKey</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, tsikey.o(i.G1GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = G1GetKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group1_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[8c]"></a>G2GetKey</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, tsikey.o(i.G2GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = G2GetKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group2_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[8e]"></a>G3GetKey</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, tsikey.o(i.G3GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = G3GetKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group3_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[90]"></a>G5GetKey</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, tsikey.o(i.G5GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = G5GetKey &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group5_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[46]"></a>GetCurrentTime</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rtc.o(i.GetCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_current_time_get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockwrite
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResetRecord
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPFlashWrite
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCallBack
</UL>

<P><STRONG><a name="[93]"></a>GetKey</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tsikey.o(i.GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GetKey &rArr; KeyCallBack &rArr; KeyValuesUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCallBack
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G5GetKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G3GetKey
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G2GetKey
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G1GetKey
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G0GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>GetPktSum</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system.o(i.GetPktSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPktSum
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
</UL>

<P><STRONG><a name="[6b]"></a>GetRtcTimeStamp</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, rtc.o(i.GetRtcTimeStamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GetRtcTimeStamp &rArr; mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_current_time_get
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2HEX
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[5c]"></a>GetTimeTicks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system.o(i.GetTimeTicks))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>GreenLed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, led.o(i.GreenLed))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>HEX2BCD</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtc.o(i.HEX2BCD))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
</UL>

<P><STRONG><a name="[96]"></a>IO_USART_TX_PutVal</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sim_uart.o(i.IO_USART_TX_PutVal))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartSendByte
</UL>

<P><STRONG><a name="[97]"></a>InitTsiG0</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tsikey.o(i.InitTsiG0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitTsiG0 &rArr; tsi_transfer_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group0_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[98]"></a>InitTsiG1</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, tsikey.o(i.InitTsiG1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitTsiG1 &rArr; tsi_transfer_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group1_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[99]"></a>InitTsiG2</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, tsikey.o(i.InitTsiG2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitTsiG2 &rArr; tsi_transfer_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group2_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[9a]"></a>InitTsiG3</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, tsikey.o(i.InitTsiG3))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitTsiG3 &rArr; tsi_transfer_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group3_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[9b]"></a>InitTsiG5</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, tsikey.o(i.InitTsiG5))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitTsiG5 &rArr; tsi_transfer_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group5_cycle_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[94]"></a>KeyCallBack</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, tsikey.o(i.KeyCallBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = KeyCallBack &rArr; KeyValuesUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValuesUpLoad
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[9c]"></a>KeyValuesUpLoad</STRONG> (Thumb, 36 bytes, Stack size 136 bytes, tsikey.o(i.KeyValuesUpLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = KeyValuesUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCallBack
</UL>

<P><STRONG><a name="[4a]"></a>LedInit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, led.o(i.LedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LedInit &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[a0]"></a>LinuxTickToDay</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rtc.o(i.LinuxTickToDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LinuxTickToDay &rArr; localtime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
</UL>

<P><STRONG><a name="[52]"></a>LoadSystemInfo</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, system.o(i.LoadSystemInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LoadSystemInfo &rArr; FlashWriteSysInfo &rArr; FlashWrite &rArr; FlashWriteWord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSysInfo
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadSysInfo
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[a1]"></a>MainBoardBasicInfo</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, protowithmainboard.o(i.MainBoardBasicInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = MainBoardBasicInfo &rArr; SendMsg_ACK &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_ACK
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCBBumUpLoad
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardPktProc
</UL>

<P><STRONG><a name="[a4]"></a>MainBoardCardInfo</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, protowithmainboard.o(i.MainBoardCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MainBoardCardInfo &rArr; CardNumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockwrite
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCardBlockSuccessUpLoad
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardNumUpLoad
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPktSum
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardPktProc
</UL>

<P><STRONG><a name="[65]"></a>MainBoardPktProc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, protowithmainboard.o(i.MainBoardPktProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = MainBoardPktProc &rArr; MainBoardCardInfo &rArr; CardNumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
</UL>

<P><STRONG><a name="[5d]"></a>Mifare_Auth</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, m1_card.o(i.Mifare_Auth))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Mifare_Auth &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[a5]"></a>Mifare_Blockread</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, m1_card.o(i.Mifare_Blockread))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Mifare_Blockread &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
</UL>

<P><STRONG><a name="[a7]"></a>Mifare_Blockwrite</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, m1_card.o(i.Mifare_Blockwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Mifare_Blockwrite &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
</UL>

<P><STRONG><a name="[aa]"></a>NFCardTask</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nfcard.o(i.NFCardTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = NFCardTask &rArr; Check_M1_Card &rArr; TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>PCBBumUpLoad</STRONG> (Thumb, 46 bytes, Stack size 144 bytes, protowithmainboard.o(i.PCBBumUpLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = PCBBumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
</UL>

<P><STRONG><a name="[a9]"></a>Pcd_Comm</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, fm175xx.o(i.Pcd_Comm))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_FIFO
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockwrite
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[79]"></a>Pcd_ConfigISOType</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, fm175xx.o(i.Pcd_ConfigISOType))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Pcd_ConfigISOType &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[a8]"></a>Pcd_SetTimer</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, fm175xx.o(i.Pcd_SetTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Pcd_SetTimer &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockwrite
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockread
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[69]"></a>PlayVoice</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, sc8042b.o(i.PlayVoice))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PlayVoice &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay100Us
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[68]"></a>PrintfData</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, usart.o(i.PrintfData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PrintfData &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_ACK
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
</UL>

<P><STRONG><a name="[ac]"></a>Read_FIFO</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, fm175xx.o(i.Read_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read_FIFO &rArr; Read_Reg &rArr; SPIRead &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[60]"></a>Read_Reg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fm175xx.o(i.Read_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Read_Reg &rArr; SPIRead &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Auth
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_FIFO
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
</UL>

<P><STRONG><a name="[51]"></a>RtcInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rtc.o(i.RtcInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RtcInit &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[ae]"></a>SPIRead</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fm175xx.o(i.SPIRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPIRead &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadByte
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
</UL>

<P><STRONG><a name="[b2]"></a>SPIWrite</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, fm175xx.o(i.SPIWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>

<P><STRONG><a name="[6e]"></a>SendDebugPkt</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, comproto.o(i.SendDebugPkt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SendDebugPkt &rArr; PrintfData &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSend
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPktSum
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
</UL>

<P><STRONG><a name="[a2]"></a>SendMsg_ACK</STRONG> (Thumb, 52 bytes, Stack size 152 bytes, protowithmainboard.o(i.SendMsg_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = SendMsg_ACK &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
</UL>

<P><STRONG><a name="[6a]"></a>SetRtcCount</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rtc.o(i.SetRtcCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetRtcCount &rArr; rtc_init &rArr; rtc_register_sync_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinuxTickToDay
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEX2BCD
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
</UL>

<P><STRONG><a name="[63]"></a>Set_BitMask</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fm175xx.o(i.Set_BitMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Rf
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_FIFO
</UL>

<P><STRONG><a name="[7a]"></a>Set_Rf</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, fm175xx.o(i.Set_Rf))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Set_Rf &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[b5]"></a>SimUartGPIOInit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sim_uart.o(i.SimUartGPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SimUartGPIOInit &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartInit
</UL>

<P><STRONG><a name="[4e]"></a>SimUartInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, sim_uart.o(i.SimUartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SimUartInit &rArr; TimerConfig &rArr; timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartGPIOInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[b6]"></a>SimUartSendByte</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sim_uart.o(i.SimUartSendByte))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_USART_TX_PutVal
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>SpiInit</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, spi.o(i.SpiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SpiInit &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Init
</UL>

<P><STRONG><a name="[b1]"></a>SpiReadByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi.o(i.SpiReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SpiReadByte &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
</UL>

<P><STRONG><a name="[b0]"></a>SpiReadWriteByte</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, spi.o(i.SpiReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadByte
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
</UL>

<P><STRONG><a name="[b7]"></a>SyncSystemInfo</STRONG> (Thumb, 48 bytes, Stack size 144 bytes, protowithmainboard.o(i.SyncSystemInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SyncSystemInfo &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>SyncSystemState</STRONG> (Thumb, 36 bytes, Stack size 136 bytes, protowithmainboard.o(i.SyncSystemState))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = SyncSystemState &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, systick.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, system_gd32f3x0.o(i.SystemInit))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_108m_hxtal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>SystemResetRecord</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, system.o(i.SystemResetRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SystemResetRecord &rArr; GetCurrentTime &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_all_reset_flag_clear
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[4d]"></a>SystickInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, systick.o(i.SystickInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystickInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clksource_set
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[17]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sim_uart.o(i.TIMER0_BRK_UP_TRG_COM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER0_BRK_UP_TRG_COM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartSendByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, system.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TimerConfig</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, system.o(i.TimerConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TimerConfig &rArr; timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_flag_clear
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[54]"></a>TsiKeyInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, tsikey.o(i.TsiKeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TsiKeyInit &rArr; gpio_config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG5
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG3
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG2
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG1
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG0
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[c9]"></a>TypeA_Anticollision</STRONG> (Thumb, 368 bytes, Stack size 80 bytes, m1_card.o(i.TypeA_Anticollision))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Reg
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Set_NVB
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Set_Bit_Framing
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
</UL>

<P><STRONG><a name="[5b]"></a>TypeA_CardActivate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, m1_card.o(i.TypeA_CardActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = TypeA_CardActivate &rArr; TypeA_Anticollision &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[5e]"></a>TypeA_Halt</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, m1_card.o(i.TypeA_Halt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TypeA_Halt &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
</UL>

<P><STRONG><a name="[cd]"></a>TypeA_Request</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, m1_card.o(i.TypeA_Request))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TypeA_Request &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
</UL>

<P><STRONG><a name="[ce]"></a>TypeA_Select</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, m1_card.o(i.TypeA_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TypeA_Select &rArr; Pcd_Comm &rArr; Clear_FIFO &rArr; Set_BitMask &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_CardActivate
</UL>

<P><STRONG><a name="[cb]"></a>TypeA_Set_Bit_Framing</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, m1_card.o(i.TypeA_Set_Bit_Framing))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[ca]"></a>TypeA_Set_NVB</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, m1_card.o(i.TypeA_Set_NVB))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TypeA_Set_NVB
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
</UL>

<P><STRONG><a name="[cf]"></a>UARTx_Init</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, usart.o(i.UARTx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UARTx_Init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Flush
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartInit
</UL>

<P><STRONG><a name="[24]"></a>USART0_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usart.o(i.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART0_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Put
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART1_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIFO_S_Put
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>UsartInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usart.o(i.UsartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UsartInit &rArr; UARTx_Init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[42]"></a>UsartSend</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, usart.o(i.UsartSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMsWithNoneOs
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
</UL>

<P><STRONG><a name="[de]"></a>VirtualUartByteSend</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, sim_uart.o(i.VirtualUartByteSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VirtualUartByteSend &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[4b]"></a>WatchDogInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system.o(i.WatchDogInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WatchDogInit &rArr; rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_on
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_enable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_counter_reload
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_config
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[a6]"></a>WriteCardBlockSuccessUpLoad</STRONG> (Thumb, 36 bytes, Stack size 136 bytes, protowithmainboard.o(i.WriteCardBlockSuccessUpLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WriteCardBlockSuccessUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_CB_SendData
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
</UL>

<P><STRONG><a name="[ab]"></a>Write_FIFO</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, fm175xx.o(i.Write_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Write_FIFO &rArr; Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[61]"></a>Write_Reg</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fm175xx.o(i.Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Write_Reg &rArr; SPIWrite &rArr; SpiReadWriteByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Halt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_BitMask
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_BitMask
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Select
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Request
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypeA_Anticollision
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_FIFO
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_SetTimer
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_ConfigISOType
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcd_Comm
</UL>

<P><STRONG><a name="[e3]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10a]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[47]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteSysInfo
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mifare_Blockwrite
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardCardInfo
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardBasicInfo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDebugPkt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_M1_Card
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResetRecord
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemInfo
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPFlashWrite
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCallBack
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G5GetKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G3GetKey
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G2GetKey
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G1GetKey
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G0GetKey
</UL>

<P><STRONG><a name="[e5]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10b]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[92]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
</UL>

<P><STRONG><a name="[10c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[10d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[10e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[7f]"></a>fmc_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f3x0_fmc.o(i.fmc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
</UL>

<P><STRONG><a name="[80]"></a>fmc_lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_fmc.o(i.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
</UL>

<P><STRONG><a name="[7e]"></a>fmc_page_erase</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gd32f3x0_fmc.o(i.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fmc_page_erase &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
</UL>

<P><STRONG><a name="[e8]"></a>fmc_ready_wait</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, gd32f3x0_fmc.o(i.fmc_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
</UL>

<P><STRONG><a name="[e9]"></a>fmc_state_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gd32f3x0_fmc.o(i.fmc_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>

<P><STRONG><a name="[7d]"></a>fmc_unlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f3x0_fmc.o(i.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTest
</UL>

<P><STRONG><a name="[84]"></a>fmc_word_program</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, gd32f3x0_fmc.o(i.fmc_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fmc_word_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWord
</UL>

<P><STRONG><a name="[32]"></a>fputc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fputc &rArr; VirtualUartByteSend &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirtualUartByteSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[e1]"></a>fwdgt_config</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, gd32f3x0_fwdgt.o(i.fwdgt_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fwdgt_config
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
</UL>

<P><STRONG><a name="[7b]"></a>fwdgt_counter_reload</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_fwdgt.o(i.fwdgt_counter_reload))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
</UL>

<P><STRONG><a name="[e2]"></a>fwdgt_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_fwdgt.o(i.fwdgt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
</UL>

<P><STRONG><a name="[d0]"></a>gpio_af_set</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, gd32f3x0_gpio.o(i.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[76]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f3x0_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLed
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_USART_TX_PutVal
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirtualUartByteSend
</UL>

<P><STRONG><a name="[77]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f3x0_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLed
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_USART_TX_PutVal
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIWrite
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIRead
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FM175XX_HardReset
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirtualUartByteSend
</UL>

<P><STRONG><a name="[c7]"></a>gpio_config</STRONG> (Thumb, 608 bytes, Stack size 32 bytes, tsikey.o(i.gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gpio_config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[ad]"></a>gpio_input_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_gpio.o(i.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVoice
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadWriteByte
</UL>

<P><STRONG><a name="[9e]"></a>gpio_mode_set</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, gd32f3x0_gpio.o(i.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartGPIOInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[9f]"></a>gpio_output_options_set</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, gd32f3x0_gpio.o(i.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartGPIOInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = main &rArr; ComRecvMainBoardData &rArr; MainBoardPktProc &rArr; MainBoardCardInfo &rArr; CardNumUpLoad &rArr; App_CB_SendData &rArr; UsartSend &rArr; DelayMsWithNoneOs &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemState
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncSystemInfo
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCardTask
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GreenLed
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeTicks
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWatchDog
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugRecvProc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRecvMainBoardData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[c4]"></a>nvic_irq_enable</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, gd32f3x0_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[eb]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>nvic_vector_table_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_misc.o(i.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>pmu_backup_write_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_pmu.o(i.pmu_backup_write_enable))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
</UL>

<P><STRONG><a name="[bb]"></a>rcu_all_reset_flag_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_all_reset_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResetRecord
</UL>

<P><STRONG><a name="[fc]"></a>rcu_clock_freq_get</STRONG> (Thumb, 392 bytes, Stack size 64 bytes, gd32f3x0_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[ba]"></a>rcu_flag_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResetRecord
</UL>

<P><STRONG><a name="[df]"></a>rcu_osci_on</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_osci_on))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
</UL>

<P><STRONG><a name="[e0]"></a>rcu_osci_stab_wait</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, gd32f3x0_rcu.o(i.rcu_osci_stab_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
</UL>

<P><STRONG><a name="[9d]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimUartGPIOInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[f2]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[f1]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[f0]"></a>rcu_rtc_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f3x0_rcu.o(i.rcu_rtc_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
</UL>

<P><STRONG><a name="[6c]"></a>rtc_current_time_get</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, gd32f3x0_rtc.o(i.rtc_current_time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rtc_current_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRtcTimeStamp
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugPktProc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTime
</UL>

<P><STRONG><a name="[b4]"></a>rtc_init</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, gd32f3x0_rtc.o(i.rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtc_init &rArr; rtc_register_sync_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_register_sync_wait
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init_mode_exit
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init_mode_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcCount
</UL>

<P><STRONG><a name="[ec]"></a>rtc_init_mode_enter</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32f3x0_rtc.o(i.rtc_init_mode_enter))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[ed]"></a>rtc_init_mode_exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_rtc.o(i.rtc_init_mode_exit))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[af]"></a>rtc_pre_config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, rtc.o(i.rtc_pre_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtc_pre_config &rArr; rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_register_sync_wait
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_rtc_clock_config
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_backup_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcInit
</UL>

<P><STRONG><a name="[ee]"></a>rtc_register_sync_wait</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, gd32f3x0_rtc.o(i.rtc_register_sync_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rtc_register_sync_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_pre_config
</UL>

<P><STRONG><a name="[bc]"></a>systick_clksource_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f3x0_misc.o(i.systick_clksource_set))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickInit
</UL>

<P><STRONG><a name="[c5]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_auto_reload_shadow_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
</UL>

<P><STRONG><a name="[c0]"></a>timer_deinit</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, gd32f3x0_timer.o(i.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
</UL>

<P><STRONG><a name="[bf]"></a>timer_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_disable))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[c6]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
</UL>

<P><STRONG><a name="[c3]"></a>timer_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
</UL>

<P><STRONG><a name="[c1]"></a>timer_init</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, gd32f3x0_timer.o(i.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
</UL>

<P><STRONG><a name="[c2]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfig
</UL>

<P><STRONG><a name="[be]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32f3x0_timer.o(i.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>tsi_channel_pin_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_channel_pin_disable))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG5
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG3
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG2
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG1
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G5GetKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G3GetKey
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G2GetKey
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G1GetKey
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G0GetKey
</UL>

<P><STRONG><a name="[f9]"></a>tsi_channel_pin_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_channel_pin_enable))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>

<P><STRONG><a name="[c8]"></a>tsi_config</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, tsikey.o(i.tsi_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tsi_config &rArr; tsi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_sofeware_mode_config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_sample_pin_enable
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_hysteresis_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_group_enable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TsiKeyInit
</UL>

<P><STRONG><a name="[f8]"></a>tsi_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
</UL>

<P><STRONG><a name="[fa]"></a>tsi_flag_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>

<P><STRONG><a name="[87]"></a>tsi_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG5
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG3
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG2
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG1
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G5GetKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G3GetKey
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G2GetKey
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G1GetKey
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G0GetKey
</UL>

<P><STRONG><a name="[88]"></a>tsi_group0_cycle_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_group0_cycle_get))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG0
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G0GetKey
</UL>

<P><STRONG><a name="[8b]"></a>tsi_group1_cycle_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_group1_cycle_get))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG1
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G1GetKey
</UL>

<P><STRONG><a name="[8d]"></a>tsi_group2_cycle_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_group2_cycle_get))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG2
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G2GetKey
</UL>

<P><STRONG><a name="[8f]"></a>tsi_group3_cycle_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_group3_cycle_get))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG3
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G3GetKey
</UL>

<P><STRONG><a name="[91]"></a>tsi_group5_cycle_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_group5_cycle_get))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG5
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G5GetKey
</UL>

<P><STRONG><a name="[f6]"></a>tsi_group_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_group_enable))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
</UL>

<P><STRONG><a name="[f7]"></a>tsi_hysteresis_off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_hysteresis_off))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
</UL>

<P><STRONG><a name="[f3]"></a>tsi_init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gd32f3x0_tsi.o(i.tsi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tsi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
</UL>

<P><STRONG><a name="[f5]"></a>tsi_sample_pin_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_sample_pin_enable))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
</UL>

<P><STRONG><a name="[f4]"></a>tsi_sofeware_mode_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_sofeware_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_config
</UL>

<P><STRONG><a name="[fb]"></a>tsi_software_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f3x0_tsi.o(i.tsi_software_start))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_transfer_pin
</UL>

<P><STRONG><a name="[86]"></a>tsi_transfer_pin</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tsikey.o(i.tsi_transfer_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tsi_transfer_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_software_start
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_get
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_flag_clear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_channel_pin_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG5
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG3
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG2
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG1
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTsiG0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G5GetKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G3GetKey
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G2GetKey
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G1GetKey
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G0GetKey
</UL>

<P><STRONG><a name="[d2]"></a>usart_baudrate_set</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gd32f3x0_usart.o(i.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[d9]"></a>usart_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>usart_data_transmit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSend
</UL>

<P><STRONG><a name="[d1]"></a>usart_deinit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32f3x0_usart.o(i.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[d7]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[dd]"></a>usart_flag_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSend
</UL>

<P><STRONG><a name="[d5]"></a>usart_interrupt_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32f3x0_usart.o(i.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[db]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, gd32f3x0_usart.o(i.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[d4]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f3x0_usart.o(i.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b9]"></a>system_clock_108m_hxtal</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, system_gd32f3x0.o(i.system_clock_108m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e4]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[e7]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e6]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[33]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
